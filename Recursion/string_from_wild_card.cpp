/*
You are given string s of length n, having m wildcard characters '?', where each wildcard character represents a single character. Write a program which returns a list of all possible distinct strings that can be generated by replacing each wildcard character in s with either '0' or '1'.

Any string returned must not contain '?' characters, all must be replaced with either '0' or '1'.

Example One
{
"s": "1?10"
}
Output:

["1010", "1110"]
Example Two
{
"s": "1?0?"
}
Output:

["1000", "1001", "1100", "1101"]
Input string has two '?' characters. Each one can be replaced with either '0' or '1' making the total number of distinct strings 22 = 4.

Notes
*/
void helper(string s, int index, string slate, vector<string> &result)
{
    if (index == s.length())
    {
        result.push_back(slate);
        return;
    }

    char one = '1';
    char zero = '0';
    // now choose two options for wild character.

    if (s[index] == '?')
    {
        slate.push_back(one);
        helper(s, index + 1, slate, result);
        slate.pop_back();

        slate.push_back(zero);
        helper(s, index + 1, slate, result);
        slate.pop_back();
    }
    else
    {
        // otherwise skip it.
        slate.push_back(s[index]);
        helper(s, index + 1, slate, result);
        slate.push_back(s[index]);
    }
    return;
}

vector<string> find_all_possibilities(string &s)
{
    // Write your code here.
    vector<string> result;
    string slate;
    helper(s, 0, slate, result);
    return result;
}
